name: long-checks

on:
  push:
    tags:
      - 'p*'

jobs:
  undefined-behaviour-fuzzy-dynamic-analysis:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Cache produced data
      id: cache-data
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-ci-${{ hashFiles('**/Cargo.toml') }}

    - name: Install Rust nightly and miri
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        components: miri, rust-src
        override: true

    # FIXME Use binaries
    - name: Install cargo-fuzz
      if: steps.cache-data.outputs.cache-hit != 'true'
      run: |
        cargo install cargo-fuzz

    - name: Run miri
      env:
        # -Zrandomize-layout makes sure not to rely on the layout of anything
        # that might change
        RUSTFLAGS: -Zrandomize-layout
        # -Zmiri-symbolic-alignment-check makes the alignment check more strict.
        MIRIFLAGS: >
          -Zmiri-symbolic-alignment-check
      run: cargo miri test

    # FIXME Create a template with a dummy series of fuzzy tests
    - name: Init cargo-fuzz
      run: cargo fuzz init

    - name: Run cargo-fuzz
      run: cargo fuzz build

    - name: Run AddressSanitizer
      env:
        RUSTFLAGS: -Zsanitizer=address -Copt-level=3
        RUSTDOCFLAGS: -Zsanitizer=address
      run: cargo test -Zbuild-std --target x86_64-unknown-linux-gnu
      # Use `cargo run` for the analysis of a binary.
      # Usage of the `help` command as base command, please replace it
      # with the effective command that AddressSanitizer has to analyze
      # run: cargo run -Zbuild-std --target x86_64-unknown-linux-gnu -- --help

  memory-and-threads-dynamic-analysis:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install Rust stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Install valgrind
      run: |
        sudo apt-get install valgrind

    - name: Install cargo-valgrind
      run: |
        cargo install cargo-valgrind

    - name: Run cargo-valgrind
      env:
        RUSTFLAGS: -Copt-level=3
      run: |
        cargo valgrind test
